# ------------------------------------------------------------------------------
# Note. pre -> enact -> post 순으로 실행됨
#
# $ tree /opt/elasticbeanstalk/hooks/
# /opt/elasticbeanstalk/hooks/
# ├── appdeploy
# │   ├── enact
# │   │   ├── 01_flip.sh
# │   │   ├── 02_configure_logs_directory.sh
# │   │   ├── 02_configure_logs_directory.sh.bak
# │   │   └── 99_reload_app_server.sh
# │   ├── post
# │   │   └──  01_monitor_httpd_pid.sh
# │   └── pre
# │       ├── 01_unzip.sh
# │       ├── 02_setup_envvars.sh
# │       ├── 05_configure_php.sh
# │       ├── 10_composer_install.sh
# │       └── 12_update_permissions.sh
# ├── configdeploy
# │   ├── enact
# │   │   ├── 00_update_cwlogs_agent.sh
# │   │   └── 99_reload_app_server.sh
# │   ├── post
# │   └── pre
# │       ├── 10_setup_envvars.sh
# │       └── 20_configure_php.sh
# ├── postinit
# └── preinit
#     ├── 01_setup_envvars.sh
#     ├── 02_web_user.sh
#     ├── 03_packages.sh
#     ├── 04_configure_php.sh
#     ├── 05_composer.sh
#     ├── 10_layout.sh
#     ├── 11_logging.sh
#     ├── 22_pear.sh
#     ├── 23_apache.sh
#     └── 30_permissions.sh
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# CONFIG DEPLOY
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# APP DEPLOY
# ------------------------------------------------------------------------------

# Pre
# Post
files:
  /opt/elasticbeanstalk/hooks/appdeploy/post/02_create_dot_env_file.sh:
    mode: "000755"
    owner: webapp
    group: webapp
    content: |
      #!/usr/bin/env bash

      set -xe

      echo "Creating new .env file."
      [ -f /var/app/current/.env ] && rm /var/app/current/.env
      cp /var/app/current/.env.example /var/app/current/.env
      chown webapp:webapp /var/app/current/.env

      echo "Appending instance ID to .env file."
      instanceId=$(curl http://169.254.169.254/latest/meta-data/instance-id 2> /dev/null)
      echo "" >> /var/app/current/.env
      echo "EC2_INSTANCE_ID=${instanceId}" >> /var/app/current/.env

      appVersion=$(cat /opt/elasticbeanstalk/deploy/configuration/appsourceurl | python -c 'import os, sys, json, urlparse; print os.path.basename(urlparse.urlparse(json.load(sys.stdin)["url"]).path)')

      CUR_VERSION=$(cat /var/app/current/.env | sed -n 's/APP_VERSION=//gp')
      if [ -z "${CUR_VERSION}" ]; then
        echo "Appending application version to .env file."
        echo "" >> /var/app/current/.env
        echo "APP_VERSION=${appVersion}" >> /var/app/current/.env
      else
        echo "Replacing application version to .env file."
        sed -i "s/APP_VERSION=.*/APP_VERSION=${appVersion}/" /var/app/current/.env
      fi

  /opt/elasticbeanstalk/hooks/appdeploy/post/03_change_permissions.sh:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      set -xe

      echo "Changing permission of directories."
      chmod 775 -Rf /var/app/current/storage /var/app/current/bootstrap/cache/

  /opt/elasticbeanstalk/hooks/appdeploy/post/20_activate_cron_jobs.sh:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      source /opt/elasticbeanstalk/support/envvars

      WWW_USER="webapp"
      USER_CRONJOB_FILE="/var/spool/cron/$WWW_USER"

      if [ -f $USER_CRONJOB_FILE ];
      then
         crontab -u $WWW_USER -r
      fi

      CRON_WORK=$(env|sed -n 's/CRON_WORK=//gp')
      if [ "$CRON_WORK" = "true" ]; then
        echo $CRON_WORK
        crontab -u $WWW_USER /var/app/current/provision/crontab.txt
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/post/490_supervisor_install.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      source /opt/elasticbeanstalk/support/envvars

      if [ ! -f /usr/local/bin/supervisord ]; then
          echo "Installing supervisor and creating directories."
          easy_install supervisor
      else
          echo "Supervisor already installed."
      fi

      if [ ! -d /etc/supervisor ]; then
          echo "Creating supervisor directory."
          mkdir /etc/supervisor
      fi

      if [ ! -d /etc/supervisor/conf.d ]; then
          echo "Creating supervisor configs directory."
          mkdir /etc/supervisor/conf.d
      fi

      DOCROOT="/var/app/current"

      echo "Placing supervisor configurations."
      cat "${DOCROOT}"/provision/supervisord.conf > /etc/supervisord.conf
      cat "${DOCROOT}"/provision/laravel-queue.conf > /etc/supervisor/conf.d/laravel-queue.conf

  "/opt/elasticbeanstalk/hooks/appdeploy/post/500_supervisor_environment_variables_config.rb":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/env ruby

      require '/opt/elasticbeanstalk/support/get_envvars'

      if __FILE__ == $0
        env_file = '/etc/supervisor/conf.d/environment.conf'
        env_vars = get_env_vars

        str = "[supervisord]\n"
        str << "environment="
        env_vars.each do |key, value|
            new_key = key.gsub(/\s/, '_')
            str << "#{new_key}=\"#{value}\","
        end

        File.open(env_file, 'w') { |f| f.write(str) }
      end

  "/opt/elasticbeanstalk/hooks/appdeploy/post/510_supervisor_start_and_stop.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      source /opt/elasticbeanstalk/support/envvars

      QUEUE_WORK=$(env|sed -n 's/QUEUE_WORK=//gp')
      if [ "$QUEUE_WORK" = "true" ]; then
        if ps aux | grep "[/]usr/local/bin/supervisord"; then
          echo "Supervisor is already running."
        else
          echo "Starting supervisor."
          /usr/bin/python /usr/local/bin/supervisord --configuration /etc/supervisord.conf
        fi

        /usr/local/bin/supervisorctl reread
        /usr/local/bin/supervisorctl update
      else
        if ps aux | grep "[/]usr/local/bin/supervisord"; then
          echo "Stopping supervisor."
          /usr/local/bin/supervisorctl stop all
          /usr/local/bin/supervisorctl shutdown
        fi
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/post/520_restart_artisan_queue_restart.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      source /opt/elasticbeanstalk/support/envvars

      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config  container -k app_user)
      QUEUE_WORK=$(env|sed -n 's/QUEUE_WORK=//gp')
      if [ "$QUEUE_WORK" = "true" ]; then
        if ps aux | grep "[/]usr/local/bin/supervisord"; then
          echo "Supervisor is already running."
          sudo -u $EB_APP_USER -E /usr/bin/php /var/app/current/artisan queue:restart
        fi
      fi

commands:
  20copy_cron_jobs_for_config_deploy:
    command: /bin/cp -f /opt/elasticbeanstalk/hooks/appdeploy/post/20_activate_cron_jobs.sh /opt/elasticbeanstalk/hooks/configdeploy/post/20_activate_cron_jobs.sh
  31copy_supervisor-environment-variables-config_for_config_deploy:
    command: /bin/cp -f /opt/elasticbeanstalk/hooks/appdeploy/post/500_supervisor_environment_variables_config.rb /opt/elasticbeanstalk/hooks/configdeploy/post/500_supervisor_environment_variables_config.rb
  32copy_supervisor_start_and_stop_for_config_deploy:
    command: /bin/cp -f /opt/elasticbeanstalk/hooks/appdeploy/post/510_supervisor_start_and_stop.sh /opt/elasticbeanstalk/hooks/configdeploy/post/510_supervisor_start_and_stop.sh
  35copy_supervisor_queue_restart_for_config_deploy:
    command: /bin/cp -f /opt/elasticbeanstalk/hooks/appdeploy/post/520_restart_artisan_queue_restart.sh /opt/elasticbeanstalk/hooks/configdeploy/post/520_restart_artisan_queue_restart.sh
